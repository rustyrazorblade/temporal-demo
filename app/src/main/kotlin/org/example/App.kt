/*
 * This source file was generated by the Gradle 'init' task
 */
package org.example

import io.temporal.client.WorkflowClient
import io.temporal.client.WorkflowOptions

import io.temporal.serviceclient.WorkflowServiceStubs
import io.temporal.worker.WorkerFactory
import org.jline.reader.LineReaderBuilder
import org.jline.terminal.Terminal
import org.jline.terminal.TerminalBuilder

class App {
    val greeting: String
        get() {
            return "Hello World!"
        }
}

fun main() {
    val service = WorkflowServiceStubs.newLocalServiceStubs()
    val client = WorkflowClient.newInstance(service)
    val factory = WorkerFactory.newInstance(client)

    val worker = factory.newWorker("test")
    worker.registerWorkflowImplementationTypes(TestWorkflowImpl::class.java)
    worker.registerActivitiesImplementations(MyActivitiesImpl::class.java)
    factory.start()


    val terminal: Terminal = TerminalBuilder.builder().build()
    val reader = LineReaderBuilder.builder().terminal(terminal).build()
    println("Starting up the app")

    println("Enter a string")
    val line = reader.readLine()

    println("Enter a number")
    val line2 = reader.readLine()

    println("Starting with $line and $line2")

    // create a workflow
    val workflowOptions = WorkflowOptions.newBuilder()
        .setTaskQueue("the-queue")
        .setWorkflowId("monkey").build()

    val workflow = client.newWorkflowStub(TestWorkflow::class.java, workflowOptions)

    val data = WorkflowDataImpl(line)

    val instance = WorkflowClient.start(workflow::starCoolWorkflow, data)
    println(instance.workflowId)

    // the workflow is going to create a bunch of activities, and it will take at least a minute to run
    // so we're going to create it then monitor it
}
